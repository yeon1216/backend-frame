version: "3.8"
services:
  nginx:
    image: nginx:1.19
    ports:
      - "8282:80"
    volumes: 
      # nginx 설정을 수정하기 위해 볼륨 마운트(프록시, https 설정 등)
      - ./nginx/conf.d:/etc/nginx/conf.d
    container_name: camerafi-live-nginx
    depends_on:
      # depens_on 필요한 이유 찾아야함
      - help-center-nodejs
    restart: "unless-stopped" # 내부에서 에러로 인해 container가 죽을 경우 restart (TODO : 확인 필요함)

  mariadb:
    build: ./db/mariadb
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      LC_ALL: C.UTF-8
    expose: 
      # mariadb는 같은 docker network에서만 접속이 가능함
      - "3306"
    container_name: camerafi-live-mariadb
    volumes:
      - mariadb-volume:/var/lib/mysql:rw
    restart: on-failure

  help-center-nodejs:
    build: ./services/help-center/nodejs
    expose: 
      - "8080"
    container_name: help-center-nodejs
    # volumes: 
      # 이렇게 도커 볼륨을 마운트 하는 경우 문제점 찾아보기
      # 현재(2011271700) 생각으로는 개발시에는 편할 것 같은데
      # 실 서비스에 이상태로 배포하면 문제가 생길 수 있을 것 같음
      # - ./services/help-center/nodejs/:/usr/src/app/
    depends_on:
      # depens_on 필요한 이유 찾아야함
      - mariadb
    restart: on-failure

volumes:
  mariadb-volume: {}



##  ####################################
##  [컴포즈 파일 실행 후 해야하는 작업]
##  1. mariadb-volume 볼륨이 처음 생성 되었거나 DB 초기화가 안되있다면 DB 초기화
##  2. nginx reverse proxy 설정
##  ####################################

##  #####################################
##  TODO 1. 하나의 서비스만 재빌드가 가능한지 테스트 필요
##  TODO 2. 쿠버네티스가 필요할지 검토 필요
##  #####################################
